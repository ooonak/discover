// # D-Bus interface proxy for: `org.freedesktop.Avahi.ServiceBrowser`
//
// This code was generated by `zbus-xmlgen` `5.1.0` from D-Bus introspection data.
// Source: `ServiceBrowserIntrospect.xml`.
//
// You may prefer to adapt it, instead of using it verbatim.
//
// More information can be found in the [Writing a client proxy] section of the zbus
// documentation.
//
// This type implements the [D-Bus standard interfaces], (`org.freedesktop.DBus.*`) for which the
// following zbus API can be used:
//
// * [`zbus::fdo::IntrospectableProxy`]
//
// Consequently `zbus-xmlgen` did not generate code for the above interfaces.
//
// [Writing a client proxy]: https://dbus2.github.io/zbus/client.html
// [D-Bus standard interfaces]: https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces,

#[proxy(
    interface = "org.freedesktop.Avahi.ServiceBrowser",
    assume_defaults = true
)]
pub trait ServiceBrowser {
    /// Free method
    fn free(&self) -> zbus::Result<()>;

    /// ItemNew signal
    #[zbus(signal)]
    fn item_new(
        &self,
        interface: i32,
        protocol: i32,
        name: &str,
        type_: &str,
        domain: &str,
        flags: u32,
    ) -> zbus::Result<()>;

    /// ItemRemove signal
    #[zbus(signal)]
    fn item_remove(
        &self,
        interface: i32,
        protocol: i32,
        name: &str,
        type_: &str,
        domain: &str,
        flags: u32,
    ) -> zbus::Result<()>;
}
